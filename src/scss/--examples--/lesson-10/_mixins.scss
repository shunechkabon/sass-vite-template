// @mixin frame_size($width, $height: $width) {
//     width: $width;
//     height: $height;
// }

// %size {
//     width: 150px;
//     height: 150px;
// }

// .avatar {
//     @include frame-size(150px);
//     @extend %size;

//     border-radius: 50%;
// }

// .icon {
//     @include frame_size(50px);
//     @extend %size;
    
//     border: 2px solid blue;
// }

// ARGUMENTS

// @mixin position-center {
//     position: absolute;
//     top: 50%;
//     left: 50%;
//     transform: translate(-50%, -50%);
// }

// .decoration {
//     @include position-center;
// }

// @mixin position-center($position-type, $position-x, $position-y, $offset-x, $offset-y) {
//     position: $position-type;
//     top: $position-y;
//     left: $position-x;
//     transform: translate($offset-x, $offset-y);
// }

// .decoration {
//     @include position-center(absolute, 50%, 50%, -50%, -50%);
// }

// @mixin position-center(
//     $layer-index,
//     $display,
//     //  nessessary parameter
//     $position-type: absolute, 
//     $position-x: 50%, 
//     $position-y: $position-x, 
//     $offset-x: $position-x, 
//     $offset-y: $position-x
//     ) {
//     position: $position-type;
//     top: $position-y;
//     left: $position-x;
//     transform: translate($offset-x * -1, $offset-y * -1);
//     z-index: $layer-index;
//     display: $display;
// }

// .decoration {
//     @include position-center(100, block, $offset-y: 70%);
// }

// @mixin btn-size($args...) {
//     // @debug $args;
//     @for $i from 1 through length($args){
//         #{nth($args, $i)} {
//             $factor: ($i * 4 - 4);

//             padding: (4px + $factor) (8px + $factor);
//             border-radius: 8px + $factor;
//         }
//     }
// }

// @include btn-size(".btn-sm", ".btn-md", ".btn-lg")

// @use "sass:meta";

// @mixin btn-type($types...) {
//     // $types: (
//     //     $success: lightgreen,
//     //     $error: tomato,
//     //     $info: lightblue,
//     // );

//     @each $name, $color in meta.keywords($types) {
//         .btn-#{$name} {
//             border: 2px solid $color;
//             color: $color;
//         }
//     }
// }

// @include btn-type($success: lightgreen, $error: tomato, $info: lightblue);

@mixin hover($state) {
    &:not([disabled]):hover {
        @content;
    }
}

.button {
    background-color: #fff;
    border: 1px solid darkblue;

    @include hover($state: disabled) {
        color: white;
        background-color: darkblue;
    }
}